<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:media="http://search.yahoo.com/mrss/"
	>

<channel>
	<title>OrangePiOne &#8211; JunkHack Feed</title>
	<link>/</link>
	<description>アリエクでポチった JUNKHACK</description>
	<lastBuildDate>Sun, 12 Jun 2016 00:00:47 +0000</lastBuildDate>
	<language>ja</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.4</generator>
	<item>
		<title>VNC 設定と osx10.11 の画面共有</title>
		<link>/2016/06/12/vnc-e8a8ade5ae9ae381a8-osx10-11-e381aee794bbe99da2e585b1e69c89/</link>
		
		<dc:creator><![CDATA[JunkHack]]></dc:creator>
		<pubDate>Sun, 12 Jun 2016 00:00:47 +0000</pubDate>
				<category><![CDATA[OrangePi]]></category>
		<category><![CDATA[OrangePiLite]]></category>
		<category><![CDATA[OrangePiOne]]></category>
		<category><![CDATA[OrangePiPC]]></category>
		<category><![CDATA[osx]]></category>
		<category><![CDATA[Raspberry Pi]]></category>
		<guid isPermaLink="false">/?p=2251</guid>
							<description><![CDATA[いつも VNC の設定の仕方を忘れるので備忘録。 参考 Raspberry Piの設定【VNCサーバ（tightVNC）の設定】 ARMBIAN のデスクトップ版は、nodm で自動ログインするので、まずこれを中止。 - [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>いつも VNC の設定の仕方を忘れるので備忘録。</p>
<blockquote>
<p>参考</p>
<p><a href="http://yamaryu0508.hatenablog.com/entry/2014/08/16/202441" target="_blank" rel="noopener noreferrer external" data-wpel-link="external" class="wpel-icon-right">Raspberry Piの設定【VNCサーバ（tightVNC）の設定】<span class="wpel-icon wpel-image wpel-icon-1"></span></a></p>
</blockquote>
<p>ARMBIAN のデスクトップ版は、nodm で自動ログインするので、まずこれを中止。</p>
<pre class="brush: cpp; gutter: false; toolbar: false; collapse: true; auto-links: false; smart-tabs: false;">---- /etc/default/nodm
::
#NODM_ENABLED=true
NODM_ENABLED=false</pre>
<p>続いて、vnc のインストール</p>
<pre class="brush: cpp; gutter: false; toolbar: false; collapse: true; auto-links: false; smart-tabs: false;"># apt-get install tightvncserver</pre>
<p>設定</p>
<pre class="brush: cpp; gutter: false; toolbar: false; collapse: true; auto-links: false; smart-tabs: false;">---- /etc/init.d/vncboot
### BEGIN INIT INFO
# Provides: vncboot
# Required-Start: $remote_fs $syslog
# Required-Stop: $remote_fs $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start VNC Server at boot time
# Description: Start VNC Server at boot time.
### END INIT INFO

#! /bin/sh
# /etc/init.d/vncboot

USER=junkhack
HOME=/home/junkhack

export USER HOME

case &quot;$1&quot; in
 start)
 echo &quot;Starting VNC Server&quot;
 #Insert your favoured settings for a VNC session
 su $USER -c '/usr/bin/vncserver :1 -geometry 1440x900 -depth 24'
 ;;

 stop)
 echo &quot;Stopping VNC Server&quot;
 su $USER -c '/usr/bin/vncserver -kill :1'
 ;;

 *)
 echo &quot;Usage: /etc/init.d/vncboot {start|stop}&quot;
 exit 1
 ;;
esac

exit 0</pre>
<p>権限付与と、自動起動設定</p>
<pre class="brush: cpp; gutter: false; toolbar: false; collapse: true; auto-links: false; smart-tabs: false;"># chmod 755 /etc/init.d/vncboot
# update-rc.d vncboot defaults</pre>
<p>&#160;</p>
<p>リブートするか、起動スクリプトをたたく。</p>
<pre class="brush: cpp; gutter: false; toolbar: false; collapse: true; auto-links: false; smart-tabs: false;"># /etc/init.d/vncboot start</pre>
<p>osx からの画面共有</p>
<p><img loading="lazy" title="osxvnc" style="border-top:0;border-right:0;border-bottom:0;float:none;margin-left:auto;border-left:0;display:block;margin-right:auto;" border="0" alt="osxvnc" src="/wp-content/uploads/2016/06/osxvnc.png" width="500" height="289" /> </p>
<p>&#160;</p>
<p><img loading="lazy" title="junkhack_s_X_desktop__orangepilite_1_" style="border-top:0;border-right:0;border-bottom:0;float:none;margin-left:auto;border-left:0;display:block;margin-right:auto;" border="0" alt="junkhack_s_X_desktop__orangepilite_1_" src="/wp-content/uploads/2016/06/junkhack_s_x_desktop__orangepilite_1_.png" width="829" height="785" /> </p>
<p>osx10.11 の画面共有は少し良くなった感じ。</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Orange Pi Lite が出ていました</title>
		<link>/2016/05/28/orange-pi-lite-e3818ce587bae381a6e38184e381bee38197e3819f/</link>
		
		<dc:creator><![CDATA[JunkHack]]></dc:creator>
		<pubDate>Sat, 28 May 2016 11:05:03 +0000</pubDate>
				<category><![CDATA[OrangePi]]></category>
		<category><![CDATA[OrangePiLite]]></category>
		<category><![CDATA[OrangePiOne]]></category>
		<category><![CDATA[OrangePiPC]]></category>
		<guid isPermaLink="false">/?p=2181</guid>
							<description><![CDATA[Orange Pi Lite なかなか出ないなぁと思ってましたが、今日WEBを散歩していたらなんと販売開始されているようです。 5/9 くらいから販売していたようです。 &#160; 基本的には、one の Lan が撤 [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Orange Pi Lite なかなか出ないなぁと思ってましたが、今日WEBを散歩していたらなんと販売開始されているようです。</p>
<p>5/9 くらいから販売していたようです。</p>
<p>&#160;</p>
<p><a href="http://www.aliexpress.com/item/Orange-Pi-Lite-Support-ubuntu-linux-and-android-mini-PC-Beyond-and-Compatible-with-Raspberry/32662738571.html" target="_blank" rel="noopener noreferrer external" data-wpel-link="external"><img loading="lazy" title="New-Coming-Orange-Pi-Lite-With-Wifi-Antenna-Support-ubuntu-linux-and-android-mini-PC-Beyond" style="border-top:0;border-right:0;border-bottom:0;float:none;margin-left:auto;border-left:0;display:block;margin-right:auto;" border="0" alt="New-Coming-Orange-Pi-Lite-With-Wifi-Antenna-Support-ubuntu-linux-and-android-mini-PC-Beyond" src="/wp-content/uploads/2016/05/newcomingorangepilitewithwifiantennasupportubuntulinuxandandroidminipcbeyond.jpg" width="480" height="480" /></a> </p>
<p>基本的には、one の Lan が撤廃され、WiFi が内臓、 USB が１つから２つに増えた感じです。1700円弱でゲットできるので、サンプルに１つポチっておきました。これで、Orange Pi シリーズは3個になりました。</p>
<p>&#160;</p>
<p>あと、aliexpress のアフリエイトも初めてみました。</p>
<p>&#160;</p>
<p> <a href="http://s.click.aliexpress.com/e/ZzBYBMbQz" target="_parent" rel="noopener noreferrer external" data-wpel-link="external"><img loading="lazy" style="float:none;margin-left:auto;display:block;margin-right:auto;" src="http://g02.a.alicdn.com/kf/HTB1nalkKXXXXXatXpXXq6xXFXXXJ/2016-new-original-font-b-raspberry-b-font-pi-3-model-b-font-b-raspberry-b.jpg_220x220.jpg" width="307" height="367" /><span style="display:block;"><font color="#669966"></font></span></a> <a href="http://s.click.aliexpress.com/e/NJYFqZZjm?bz=300*250" target="_parent" rel="noopener noreferrer external" data-wpel-link="external"><img loading="lazy" style="float:none;margin-left:auto;display:block;margin-right:auto;" src="http://g01.a.alicdn.com/kf/HTB1lssRJXXXXXczXpXXq6xXFXXX8/en-300x250.jpg" width="300" height="250" /></a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>OrangePi One にFan を付けて全開ベンチマーク</title>
		<link>/2016/02/14/orangepi-one-e381abfan-e38292e4bb98e38191e381a6e585a8e9968be38399e383b3e38381e3839ee383bce382af/</link>
					<comments>/2016/02/14/orangepi-one-e381abfan-e38292e4bb98e38191e381a6e585a8e9968be38399e383b3e38381e3839ee383bce382af/#comments</comments>
		
		<dc:creator><![CDATA[JunkHack]]></dc:creator>
		<pubDate>Sun, 14 Feb 2016 11:37:05 +0000</pubDate>
				<category><![CDATA[Aliexpress]]></category>
		<category><![CDATA[OrangePi]]></category>
		<category><![CDATA[OrangePiOne]]></category>
		<guid isPermaLink="false">/?p=2109</guid>
							<description><![CDATA[Orange Pi One にファンを付けてみました。 Orange Pi PC と比較すると一回り小さいです。 ファンを付ける前にCPU の刻印をキャプチャーしておきます。G1035BA 61A3 とあります。FAN  [&#8230;]]]></description>
										<content:encoded><![CDATA[<p align="left">Orange Pi One にファンを付けてみました。</p>
<p align="left">Orange Pi PC と比較すると一回り小さいです。</p>
<p align="left"><img loading="lazy" title="one_pc" style="border-top:0;border-right:0;border-bottom:0;float:none;margin-left:auto;border-left:0;display:block;margin-right:auto;" border="0" alt="one_pc" src="/wp-content/uploads/2016/02/one_pc.jpg" width="640" height="480" /> </p>
<p align="left">ファンを付ける前にCPU の刻印をキャプチャーしておきます。G1035BA 61A3 とあります。FAN を付けないと負荷時80度を超えますので、1GHz 以内にしないとファンは必須です。</p>
<p align="center"><img loading="lazy" title="SingleShot0029" style="border-top:0;border-right:0;border-bottom:0;float:none;margin-left:auto;border-left:0;display:block;margin-right:auto;" border="0" alt="SingleShot0029" src="/wp-content/uploads/2016/02/singleshot0029.jpg" width="640" height="480" /> </p>
<p align="left">このコイルがじゃまなのでヒートシンクを切り落とします。</p>
<p align="left"><img loading="lazy" title="aa" style="border-top:0;border-right:0;border-bottom:0;float:none;margin-left:auto;border-left:0;display:block;margin-right:auto;" border="0" alt="aa" src="/wp-content/uploads/2016/02/aa.jpg" width="640" height="480" /> こんな感じ。</p>
<p align="center"><img loading="lazy" title="b" style="border-top:0;border-right:0;border-bottom:0;float:none;margin-left:auto;border-left:0;display:block;margin-right:auto;" border="0" alt="b" src="/wp-content/uploads/2016/02/b.jpg" width="640" height="480" /> </p>
<p align="left">ファンとヒートシンクは適当なネジをヒートシンクに間にねじ込みます。</p>
<p align="center"><img loading="lazy" title="a" style="border-top:0;border-right:0;border-bottom:0;float:none;margin-left:auto;border-left:0;display:block;margin-right:auto;" border="0" alt="a" src="/wp-content/uploads/2016/02/a.jpg" width="640" height="480" /> </p>
<p align="left">付けたかんじ。常時回しっぱなしにしておくので裏面の電源部から半田づけして直接5V をとりました。GPIO から温度を見て回すっていうのもありですが、１つプロセスを消費するし、GPIO からの配線が面倒だったので。回しっぱなしでも、0.3W 程度なので月約５円です。</p>
<p align="center">
<p align="center"><img loading="lazy" title="c" style="border-top:0;border-right:0;border-bottom:0;float:none;margin-left:auto;border-left:0;display:block;margin-right:auto;" border="0" alt="c" src="/wp-content/uploads/2016/02/c.jpg" width="640" height="480" /> </p>
<p align="left">温度は、ベンチマーク中でも室温24度で、60度くらいまでしかあがりません。なかなか冷えているようです。ちなみに、平常時は、45度くらいになっています。</p>
<p align="left"><img loading="lazy" title="one" style="border-top:0;border-right:0;border-bottom:0;float:none;margin-left:auto;border-left:0;display:block;margin-right:auto;" border="0" alt="one" src="/wp-content/uploads/2016/02/one.jpg" width="640" height="480" /> </p>
<p align="center"><img loading="lazy" title="h3_temp" style="border-top:0;border-right:0;border-bottom:0;float:none;margin-left:auto;border-left:0;display:block;margin-right:auto;" border="0" alt="h3_temp" src="/wp-content/uploads/2016/02/h3_temp.png" width="497" height="305" /> </p>
<p align="center">ベンチマーク中のCPU 温度</p>
<p align="center"></p>
<p> <img loading="lazy" title="ESP12_DHT22_-_ThingSpeak" style="border-top:0;border-right:0;border-bottom:0;float:none;margin-left:auto;border-left:0;display:block;margin-right:auto;" border="0" alt="ESP12_DHT22_-_ThingSpeak" src="/wp-content/uploads/2016/02/esp12_dht22__thingspeak.png" width="463" height="331" />  </p>
<p align="center">ベンチマーク中の室温</p>
<p>&#160;</p>
</p>
<p>lobo kernel にて以下のようになりました。</p>
<pre class="brush: cpp; gutter: false; toolbar: false; collapse: true; auto-links: false; smart-tabs: false;">========================================================================
   BYTE UNIX Benchmarks (Version 5.1.3)

   System: OrangePi: GNU/Linux
   OS: GNU/Linux -- 3.4.39-01-lobo -- #1 SMP PREEMPT Sun Oct 25 14:46:41 CET 2015
   Machine: armv7l (armv7l)
   Language: en_US.utf8 (charmap=&quot;UTF-8&quot;, collate=&quot;UTF-8&quot;)
   20:13:59 up 8 min,  2 users,  load average: 0.70, 0.77, 0.44; runlevel 3

------------------------------------------------------------------------
Benchmark Run: Sun Feb 14 2016 20:13:59 - 20:43:47
0 CPUs in system; running 4 parallel copies of tests

Dhrystone 2 using register variables       15869153.7 lps   (10.0 s, 7 samples)
Double-Precision Whetstone                     2987.1 MWIPS (9.9 s, 7 samples)
Execl Throughput                               1479.8 lps   (29.4 s, 2 samples)
File Copy 1024 bufsize 2000 maxblocks        150225.4 KBps  (30.0 s, 2 samples)
File Copy 256 bufsize 500 maxblocks           40862.0 KBps  (30.0 s, 2 samples)
File Copy 4096 bufsize 8000 maxblocks        395921.5 KBps  (30.0 s, 2 samples)
Pipe Throughput                              944200.7 lps   (10.0 s, 7 samples)
Pipe-based Context Switching                  84816.2 lps   (10.0 s, 7 samples)
Process Creation                               3927.2 lps   (30.0 s, 2 samples)
Shell Scripts (1 concurrent)                   1942.7 lpm   (60.1 s, 2 samples)
Shell Scripts (8 concurrent)                    261.9 lpm   (60.3 s, 2 samples)
System Call Overhead                        2197538.2 lps   (10.0 s, 7 samples)

System Benchmarks Index Values               BASELINE       RESULT    INDEX
Dhrystone 2 using register variables         116700.0   15869153.7   1359.8
Double-Precision Whetstone                       55.0       2987.1    543.1
Execl Throughput                                 43.0       1479.8    344.1
File Copy 1024 bufsize 2000 maxblocks          3960.0     150225.4    379.4
File Copy 256 bufsize 500 maxblocks            1655.0      40862.0    246.9
File Copy 4096 bufsize 8000 maxblocks          5800.0     395921.5    682.6
Pipe Throughput                               12440.0     944200.7    759.0
Pipe-based Context Switching                   4000.0      84816.2    212.0
Process Creation                                126.0       3927.2    311.7
Shell Scripts (1 concurrent)                     42.4       1942.7    458.2
Shell Scripts (8 concurrent)                      6.0        261.9    436.5
System Call Overhead                          15000.0    2197538.2   1465.0
                                                                   ========
System Benchmarks Index Score                                         499.1</pre>
<p>&#160;</p>
<p>CPUは、以下のように見えています。</p>
<pre class="brush: cpp; gutter: false; toolbar: false; collapse: true; auto-links: false; smart-tabs: false;"># cat /proc/cpuinfo 
Processor    : ARMv7 Processor rev 5 (v7l)
processor    : 0
BogoMIPS    : 4800.00

processor    : 1
BogoMIPS    : 4800.00

processor    : 2
BogoMIPS    : 4800.00

processor    : 3
BogoMIPS    : 4800.00

Features    : swp half thumb fastmult vfp edsp thumbee neon vfpv3 tls vfpv4 idiva idivt 
CPU implementer    : 0x41
CPU architecture: 7
CPU variant    : 0x0
CPU part    : 0xc07
CPU revision    : 5

Hardware    : sun8i
Revision    : 0000
Serial        : 64005035410c1027084e</pre>
<p>&#160;</p>
<p>メモリーは、512MB</p>
<pre class="brush: cpp; gutter: false; toolbar: false; collapse: true; auto-links: false; smart-tabs: false;"># cat /proc/meminfo 
MemTotal:         507372 kB
MemFree:          219756 kB
Buffers:            1852 kB
Cached:            34468 kB
SwapCached:            0 kB
Active:           216236 kB
Inactive:          17940 kB
Active(anon):     198284 kB
Inactive(anon):      836 kB
Active(file):      17952 kB
Inactive(file):    17104 kB
Unevictable:           0 kB
Mlocked:               0 kB
HighTotal:             0 kB
HighFree:              0 kB
LowTotal:         507372 kB
LowFree:          219756 kB
SwapTotal:             0 kB
SwapFree:              0 kB
Dirty:               996 kB
Writeback:             0 kB
AnonPages:        197840 kB
Mapped:            12744 kB
Shmem:              1264 kB
Slab:              21524 kB
SReclaimable:       8720 kB
SUnreclaim:        12804 kB
KernelStack:        1296 kB
PageTables:         3632 kB
NFS_Unstable:          0 kB
Bounce:                0 kB
WritebackTmp:          0 kB
CommitLimit:      253684 kB
Committed_AS:    1065072 kB
VmallocTotal:     499712 kB
VmallocUsed:       17300 kB
VmallocChunk:     213772 kB</pre>
<p>&#160;</p>
<p>nginx と php-fpm と mariadb を動作している状態で計測。</p>
<pre class="brush: cpp; gutter: false; toolbar: false; collapse: true; auto-links: false; smart-tabs: false;"># ps axu | egrep '[n]ginx|[p]hp|[m]aria'
root       539  0.0  0.8  37836  4516 ?        Ss   20:06   0:00 php-fpm: master process (/etc/php-fpm.conf)
nginx      657  0.0  2.9  57212 15056 ?        S    20:06   0:03 php-fpm: pool www
nginx      658  0.0  2.3  54172 12084 ?        S    20:06   0:03 php-fpm: pool www
nginx      659  0.0  0.6  37836  3432 ?        S    20:06   0:00 php-fpm: pool www
nginx      660  0.0  3.0  57188 15372 ?        S    20:06   0:02 php-fpm: pool www
nginx      661  0.0  1.2  48140  6104 ?        S    20:06   0:02 php-fpm: pool www
mysql      870  0.1 12.3 629000 62764 ?        Sl   20:06   0:12 /usr/libexec/mysqld --basedir=/usr --datadir=/var/lib/mysql --plugin-dir=/usr/lib/mysql/plugin --log-error=/var/log/mariadb/mariadb.log --pid-file=/var/run/mariadb/mariadb.pid --socket=/var/lib/mysql/mysql.sock
root       972  0.0  0.4  32032  2092 ?        Ss   20:06   0:00 nginx: master process /usr/sbin/nginx
nginx      974  0.0  0.5  32036  2816 ?        S    20:06   0:01 nginx: worker process
nginx      975  0.0  0.5  32036  2700 ?        S    20:06   0:01 nginx: worker process
nginx      976  0.0  0.5  32036  2912 ?        S    20:06   0:01 nginx: worker process
nginx      977  0.0  0.5  32036  2768 ?        S    20:06   0:01 nginx: worker process
nginx     1491  0.0  2.3  54228 12144 ?        S    20:06   0:02 php-fpm: pool www
nginx     2009  0.0  3.0  47920 15224 ?        S    20:07   0:02 php-fpm: pool www</pre>
<p>&#160;</p>
<p>GPIO も WirelingOP が以下のように使えます。</p>
<pre class="brush: cpp; gutter: false; toolbar: false; collapse: true; auto-links: false; smart-tabs: false;"># gpio readall
 +-----+-----+----------+------+---+--OrangePiPC--+---+------+---------+-----+--+
 | BCM | wPi |   Name   | Mode | V | Physical | V | Mode | Name     | wPi | BCM |
 +-----+-----+----------+------+---+----++----+---+------+----------+-----+-----+
 |     |     |     3.3v |      |   |  1 || 2  |   |      | 5v       |     |     |
 |   2 |  -1 |    SDA.0 |      |   |  3 || 4  |   |      | 5V       |     |     |
 |   3 |  -1 |    SCL.0 |      |   |  5 || 6  |   |      | 0v       |     |     |
 |   4 |   6 | IO6 PA06 |  OUT | 0 |  7 || 8  |   |      | TxD3     |     |     |
 |     |     |       0v |      |   |  9 || 10 |   |      | RxD3     |     |     |
 |  17 |  -1 |     RxD2 |      |   | 11 || 12 | 0 | OUT  | IO1 PD14 | 1   | 18  |
 |  27 |  -1 |     TxD2 |      |   | 13 || 14 |   |      | 0v       |     |     |
 |  22 |  -1 |     CTS2 |      |   | 15 || 16 | 0 | OUT  | IO4 PC04 | 4   | 23  |
 |     |     |     3.3v |      |   | 17 || 18 | 0 | OUT  | IO5 PC07 | 5   | 24  |
 |  10 |  -1 |     MOSI |      |   | 19 || 20 |   |      | 0v       |     |     |
 |   9 |  -1 |     MISO |      |   | 21 || 22 |   |      | RTS2     |     |     |
 |  11 |  -1 |     SCLK |      |   | 23 || 24 |   |      | SPI-CE0  |     |     |
 |     |     |       0v |      |   | 25 || 26 |   |      | CE1      |     |     |
 |   0 |  -1 |    SDA.1 |      |   | 27 || 28 |   |      | SCL.1    |     |     |
 |   5 |   7 |  IO7 PA7 |  OUT | 0 | 29 || 30 |   |      | 0v       |     |     |
 |   6 |   8 |  IO8 PA8 |  OUT | 0 | 31 || 32 | 0 | OUT  | IO9 PG08 | 9   | 12  |
 |  13 |  10 | IO10 PA9 |  OUT | 0 | 33 || 34 |   |      | 0v       |     |     |
 |  19 |  12 | IO12PA10 |  OUT | 0 | 35 || 36 | 0 | OUT  | IO13PG09 | 13  | 16  |
 |  26 |  14 | IO14PA20 | ALT3 | 0 | 37 || 38 | 0 | OUT  | IO15PG06 | 15  | 20  |
 |     |     |       0v |      |   | 39 || 40 | 0 | OUT  | IO16PG07 | 16  | 21  |
 +-----+-----+----------+------+---+----++----+---+------+----------+-----+-----+
 | BCM | wPi |   Name   | Mode | V | Physical | V | Mode | Name     | wPi | BCM |
 +-----+-----+----------+------+---+--OrangePIPC--+------+----------+-----+-----+</pre>
<p>&#160;</p>
<p>これが、1600円（送料込み）で買えるとはいい時代になりました。さて、これでOrange Pi が2台になったのでいろいろと遊べそうです。とりあえず、ケース作りを考えないとですね。</p>
<p><a href="/wp-content/uploads/2016/02/x2go1.png" target="_blank" rel="noopener noreferrer" data-wpel-link="internal"><img loading="lazy" title="X2GO" style="border-top:0;border-right:0;border-bottom:0;float:none;margin-left:auto;border-left:0;display:block;margin-right:auto;" border="0" alt="X2GO" src="/wp-content/uploads/2016/02/x2go_thumb1.png" width="598" height="480" /></a></p>
<p align="center">osx から X2Go した図</p>
<p>&#160;</p>
<p>メモリは、512MB と少ないですがCPU パワーがあるのでメモリの範囲内なら、GUI もそれなりに動きます。</p>
<p>CPU クロックは、1.2MHz に設定したほうがよさそうです。正常に周波数がとれていないようなので。ぼちぼちやっていきます。</p>
<p>Orange Pi PC の設定で1.6G の設定をしていても、1.2GHz までのようです。</p>
<p>&#160;</p>
<p>負荷時のCPU クロックの状態</p>
<pre class="brush: cpp; gutter: false; toolbar: false; collapse: true; auto-links: false; smart-tabs: false;"># cpupower frequency-info
analyzing CPU 0:
  driver: cpufreq-sunxi
  CPUs which run at the same hardware frequency: 0 1 2 3
  CPUs which need to have their frequency coordinated by software: 0 1 2 3
  maximum transition latency: 2.00 ms.
  hardware limits: 480 MHz - 1.54 GHz
  available cpufreq governors: conservative, ondemand, userspace, powersave, interactive, performance
  current policy: frequency should be within 480 MHz and 1.54 GHz.
                  The governor &quot;interactive&quot; may decide which speed to use
                  within this range.
  current CPU frequency is 1.20 GHz (asserted by call to hardware).
  cpufreq stats: 60.0 MHz:0.00%, 120 MHz:0.00%, 240 MHz:0.00%, 312 MHz:0.00%, 408 MHz:0.00%, 480 MHz:0.00%, 504 MHz:0.00%, 600 MHz:0.00%, 648 MHz:0.00%, 720 MHz:0.00%, 816 MHz:0.00%, 912 MHz:0.00%, 1.01 GHz:0.00%, 1.10 GHz:0.00%, 1.20 GHz:100.00%, 1.34 GHz:0.00%, 1.44 GHz:0.00%, 1.54 GHz:0.00%</pre>
<p>&#160;</p>
<p>▼まとめ</p>
<p>・OrangePi PC 用の Fedora22 でそのままブートした</p>
<p>・CPUクロックは、上限1.2GHz</p>
<p>・ぶん回すなら、ファンは必須</p>
<p>・UnixBench は総合スコア 500程度（OrangePi PC を1.2GHz 駆動したときと同等）</p>
<p>・OrangePi PC との価格差は、600円程度</p>
<p>・Linux を使った組み込みで具体的に何ができるか、どんな用途があるかはまだこれから模索</p>
]]></content:encoded>
					
					<wfw:commentRss>/2016/02/14/orangepi-one-e381abfan-e38292e4bb98e38191e381a6e585a8e9968be38399e383b3e38381e3839ee383bce382af/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
	</channel>
</rss>
