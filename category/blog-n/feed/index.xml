<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:media="http://search.yahoo.com/mrss/"
	>

<channel>
	<title>新ブログ &#8211; JunkHack Feed</title>
	<link>/</link>
	<description>アリエクでポチった JUNKHACK</description>
	<lastBuildDate>Sun, 22 May 2022 17:05:59 +0000</lastBuildDate>
	<language>ja</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.9.3</generator>
	<item>
		<title>縦書きでブログを書いてみることに</title>
		<link>/2022/05/22/tategaki/</link>
		
		<dc:creator><![CDATA[JunkHack]]></dc:creator>
		<pubDate>Sat, 21 May 2022 23:55:13 +0000</pubDate>
				<category><![CDATA[新ブログ]]></category>
		<guid isPermaLink="false">/?p=11270</guid>
				<media:thumbnail url="/wp-content/uploads/2022/05/tatebu-1.png" />
							<description><![CDATA[　さて、今日はいつもとは違うスタイルでブログを書いてみようかなと思います。はい、縦書たてがきです。実は十年ぐらい前に、縦書きでブログを書いていました。その時のソースコードが出てきたので懐かしいなぁと思って、復活させてみま [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>　さて、今日はいつもとは違うスタイルでブログを書いてみようかなと思います。はい、<ruby>縦書<rt>たてが</rt></ruby>きです。実は十年ぐらい前に、縦書きでブログを書いていました。その時のソースコードが出てきたので懐かしいなぁと思って、復活させてみました。</p>
<p>　縦書きを<ruby>描画<rt>レンダリング</rt></ruby>している仕組みは、<ruby>涅槃<rt>ねはん</rt></ruby>ＪＳというジャバスクリプトのプログラムです。現在の最新バージョンは５ですが、ここで使っているのは古いバージョンの２です。これは、縦書き文庫の中の人が作っている縦書き描画の仕組みです。黒魔術のように、横書きが縦書きになる様は只々、感心するばかりです。</p>
<p>　いろんな表現ができるように、涅槃ＪＳはプラグインでＨＴＭＬタグをフックさせることができるようになっています。</p>
<p>&nbsp;</p>
<p>例えば、こんな感じで、ＳＵＢＪＥＣＴタグで囲うとプチタイトルっぽい表現になります。</p>
<subject>俳句も書けます</subject>
<p>そして、俳句のような記述も可能です。ＨＡＩＫＵタグで囲うと、</p>
<haiku>柿くえば　鐘がなるなり　法隆寺</haiku>
<p>このような表現ができるようにプラグインを作りました。なかなか、楽しいですよね？　今や、縦書きの文化が廃れつつありますが、自分のブログくらいは好きに書きたいです。</p>
<p>&nbsp;</p>
<h3>技術的な話は縦書きで書けるのか？</h3>
<p>　そもそも、縦書きで技術的なネタが書けるのか？　です。はい、これは昔実験して、かなり厳しいということがわかっています。しかし、メリットもあります。それは、「不用意に横文字や略語を使わなくなる」ということです。この業界、やたらと横文字やカタカナ英語、三文字略語が多いんです。自分もたまに、この三文字略語ってなんだっけか？　と思うこともよくあります。</p>

<subject>なぜ技術の話は頭に入らないのか？</subject>



<p>　技術屋でも、専門的な話で未知の分野の場合には、</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>「この話、ぜんぜんわからん」という場面があります。これは思うに、技術的な話にはカタカナ文字や、三文字略語など、たくさん出てきます。中には使わなくても十分に説明できることも多いのです。　知っている人に説明する時は良いのですが、その分野の専門外の人が読んでも解るように話すには、なるべく横文字や三文字略語などの専門用語は使わないほうが良いのです。しかし、横書きで書いていると無意識下で使ってしまうのです。</p>
<p>&nbsp;</p>
<p>　例えば、一例を上げてみましょう。<ruby>ＬＩＮＥ<rt>らいん</rt></ruby>というスマホのアプリがあります。まだ、スマホを使ったことがない、ガラケーから移行してきた人に説明する場合を想定してみます。ウィキから引用してみましょうか。</p>
<subject>ウィキのラインの説明</subject>
<p>　利用者が相互に本アプリケーションをインストールしておけば、通信キャリアや端末を問わずに複数人のグループ通話を含む音声通話やチャットが可能である。通話サービスは通常の音声電話と異なりパケット通信を利用するインターネット電話で、パケット定額制サービスに加入していれば、通話料金を課金されることなく無制限に通話可能である。そのため無料提供されている本アプリケーションは「無料通話」などと宣伝されている。パケット通信料が従量課金であれば、データ通信料の請求額が過大になったり、パケット通信に速度制限が掛かる場合も有り得る。テキストチャットはスタンプや絵文字が多種揃っている。</p>
<p>&nbsp;</p>
<p>　たぶん、この説明では、ガラケーから移行してきた人はピンとこないでしょう。でも、英文字がそのまま文面に入っているわけではないので、マシかなと思います。</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>　自分なら、以下のように説明します。</p>
<subject>ラインとは？</subject>
<p><ruby>ＬＩＮＥ<rt>らいん</rt></ruby>とは無料のコミュニケーションができるソフトウェア。利用者間でリアルタイムに短いメッセージのやり取りや音声通話が可能。最大の特徴は、メッセージを相手に送った際、そのメッセージを相手が読んだか否かがわかる既読機能がついている点である。なお、音声通話は０９０、０８０、０７０などの音声通話を使わず、データ通信で行われるため、電話料金がかからない。データ通信を定額で抑えるためには、屋内であれば<ruby>ＷＩＦＩ<rt>わいふぁい</rt></ruby>無線環境か、屋外であれば<ruby>ＬＩＮＭＯ<rt>らいんも</rt></ruby>などの格安通信サービスを提供している事業者のプランに加入すれば無料となる。</p>
<p>&nbsp;</p>
<p>　こんな説明はどうでしょうか？</p>
<p>&nbsp;</p>
<h3>まとめ</h3>
<p>・縦書きは新鮮</p>
<p>・英字での説明は苦手</p>
<p>・不用意に英字、英語を使わなくなるのがメリット</p>
<p>・俳句が書けるのが楽しい</p>
<p>・パソコン版のレイアウトしか作っていない</p>
<p>・スマホ版のレイアウトも作る必要がある</p>
<p>・レスポンシブ対応ではない</p>
<p>&nbsp;</p>
<h3>あとがき</h3>
<p>縦書きのブログはいかがだったでしょうか？　</p>
<p>&nbsp;</p>
<p>定期的に、話ネタなどは縦書きで書いていこうかなと思っています。テーマもそのうち公開しますので、使いたい人がいればリクエストお待ちしています。もう少し調整が必要なので、出来次第、続報のブログ記事を出す予定です。公開はＧＩＴＨＵＢかなー。</p>
<p>&nbsp;</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>このブログは、スマートフォンの中に引越ししました！</title>
		<link>/2020/09/18/this-blog-has-moved-into-a-smartphone/</link>
					<comments>/2020/09/18/this-blog-has-moved-into-a-smartphone/#comments</comments>
		
		<dc:creator><![CDATA[JunkHack]]></dc:creator>
		<pubDate>Fri, 18 Sep 2020 04:00:13 +0000</pubDate>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[Blog]]></category>
		<category><![CDATA[Linux]]></category>
		<category><![CDATA[WordPress]]></category>
		<category><![CDATA[新ブログ]]></category>
		<guid isPermaLink="false">/?p=9510</guid>
				<media:thumbnail url="/wp-content/uploads/2020/09/gogai.png" />
							<description><![CDATA[えっ？　と思われた方もいるかもしれませんが、このジャンクハックブログは引越ししました。それもスマートフォンの中にいます！ なんで、引越しをしたの？ はい、結論から言いますと今まで使っていたWordPress.comのパー [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>えっ？　と思われた方もいるかもしれませんが、このジャンクハックブログは引越ししました。それもスマートフォンの中にいます！</p>



<h3>なんで、引越しをしたの？</h3>



<p>はい、結論から言いますと今まで使っていたWordPress.comのパーソナルプランの料金が上がったからです。月額400円から500円で年間一括6000円となります。まぁ、100円くらい良いんですがなんとなく、年間で6000円かーと思いましてね。</p>



<p>今から2年ほど前、 WordPress.com 上のパーソナルプランっていうところを使い始めていました。</p>



<blockquote class="wp-block-quote"><p>Linuxエンジニアがサーバを作らず結局、WordPress.com の有料プランに入ることにしたよ</p><cite><a href="/2018/10/17/20181017/" target="_blank" rel="noreferrer noopener" data-wpel-link="internal">/2018/10/17/20181017/</a></cite></blockquote>



<p>レンタルサーバはたくさんあるんですが、WordPressのオートマチック（Automattic Inc.）がやっているサービスです。ビジネスプランまで契約しようかと当初は思っていましたが、このブログがそんな人気が出るわけでもなくチマチマとパーソナルプラン（当初月額400円）でやっていました。</p>



<p>更新期限が10月中旬ということもあって、２、３ヵ月前から自宅サーバを検討していました。ご興味があるかたは、以下から検索してね。（検索システムも速くしてあります）</p>



<blockquote class="wp-block-quote"><p>Termuxとか、自宅サーバ関連</p><cite><a href="/?s=Termux+自宅サーバ" target="_blank" rel="noreferrer noopener" data-wpel-link="internal">/?s=Termux+自宅サーバ</a></cite></blockquote>



<p>月に500円、年間6000円支払うなら電気代に払って自宅サーバでブログを楽しみたいな！　と思ったのであります。</p>



<h3>スマホの中に引越しとは？</h3>



<p>　はい、このブログはスマホの中から今見ているみなさんに提供しているんです。信じられませんよね！w</p>



<p>これは、Termux というAndroidアプリがありまして、それがつまりは Linuxなんですよね。正確にいえば、Android自体がLinux Kernelを採用したOSなんで、その上でLinux環境を構築するアプリなんです。</p>



<p>で、その環境にWEBサーバやら、データベースサーバやらを作り、WordPressを動作させているんです。回線は、普通のNTTの光回線に InterLinkのIP固定サービスでやっております。いわゆる自宅サーバというやつですね。</p>



<h3>あとがき</h3>



<p>これで、Pluginもテーマファイルもやりたい放題です。</p>



<div class="wp-block-word-balloon-word-balloon-block"><div class="w_b_box w_b_w100 w_b_flex w_b_div"><div class="w_b_wrap w_b_wrap_talk w_b_L w_b_flex w_b_div" style=""><div class="w_b_ava_box w_b_relative w_b_ava_L w_b_col w_b_f_n w_b_div"><div class="w_b_icon_wrap w_b_relative w_b_div"><div class="w_b_ava_wrap w_b_direction_L w_b_mp0 w_b_div"><div class="w_b_ava_effect w_b_relative w_b_oh w_b_radius w_b_size_M w_b_div" style="">
<img src="/wp-content/uploads/2020/09/pi-.png" width="96" height="96" alt="ぴー" class="w_b_ava_img w_b_w100 w_b_h100  w_b_mp0 w_b_img" style="" />
</div></div></div><div class="w_b_name w_b_w100 w_b_lh w_b_name_C w_b_ta_C w_b_mp0 w_b_div">ぴー</div></div><div class="w_b_bal_box w_b_bal_L w_b_relative w_b_direction_L w_b_w100 w_b_div"><div class="w_b_space w_b_mp0 w_b_div"><svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="1" height="38" viewBox="0 0 1 1" fill="transparent" stroke="transparent" stroke-miterlimit="10" class="w_b_db w_b_mp0"><polygon fill="transparent" stroke="transparent" points="0,1 0,1 0,1 0,1 "/></svg></div><div class="w_b_bal_outer w_b_flex w_b_mp0 w_b_relative w_b_div" style=""><div class="w_b_bal_wrap w_b_bal_wrap_L w_b_div"><div class="w_b_bal w_b_relative w_b_talk w_b_talk_L w_b_shadow_L w_b_ta_L w_b_div"><div class="w_b_quote w_b_div">
<p>やっぱりWordPressはカスタマイズしたいよね！</p>
</div></div></div></div></div></div></div></div>



<p>とりあず、今日は引越ししたよ！　というネタをあげたかったので以上にします。またねー。</p>
]]></content:encoded>
					
					<wfw:commentRss>/2020/09/18/this-blog-has-moved-into-a-smartphone/feed/</wfw:commentRss>
			<slash:comments>3</slash:comments>
		
		
			</item>
		<item>
		<title>備忘録：設定ファイルの空白行（改行）とコメントを削除して表示したい</title>
		<link>/2020/09/14/com-del/</link>
		
		<dc:creator><![CDATA[JunkHack]]></dc:creator>
		<pubDate>Sun, 13 Sep 2020 17:24:17 +0000</pubDate>
				<category><![CDATA[新ブログ]]></category>
		<guid isPermaLink="false">/?p=6074</guid>
				<media:thumbnail url="/wp-content/uploads/2020/08/wormhole.png" />
							<description><![CDATA[※ブロックエディターで編集したら、表示が壊れたので再投稿です。 いろんなやり方がありますが、自分が気に入ってるのは以下３つです。 $ grep . FILENAME &#124; egrep -v ^*# 改行はまぁ出てもいいやと [&#8230;]]]></description>
										<content:encoded><![CDATA[<blockquote>
<p>※ブロックエディターで編集したら、表示が壊れたので再投稿です。</p>
</blockquote>
<p>いろんなやり方がありますが、自分が気に入ってるのは以下３つです。</p>
<pre>$ grep . <em>FILENAME</em> | egrep -v ^*#</pre>
<p>改行はまぁ出てもいいやという場合は、コメント行だけ削除。</p>
<pre>$ egrep -v ^*# <em>FILENAME</em></pre>
<p>なんか空白（でたぶん改行が）多いなって場合は、パイプして、grep . をつければOK。 改行と、コメント行の場合は、こんな書き方も。</p>
<pre class="p1"><span class="s1">$ egrep -v '^*#|^$' <em>FILENAME</em></span></pre>
<p>大体の設定ファイルは、空白行じゃなく改行だけの行なのでこれで足ります。最後のやり方だと、設定ファイルだけ見る場合、↑（上矢印）で直近コマンド出して、最後のファイル名だけ変えればまた使えるので、便利です。ちゃんとコメント行と空白行（改行と空白行）を削除したい場合は、以下になりますがタイプしずらいですよね！</p>
<pre class="p1"><span class="s1">$ egrep -v '^*#|^\s*$' <em>FILENAME</em></span></pre>
<p>例えば、termuxのapache2の設定ファイル（デフォルト）httpd.confは改行とコメント行を抜くと以下です。</p>
<pre>$ egrep -v '^*#|^$' httpd.conf.org 
ServerRoot "/data/data/com.termux/files/usr"
Listen 8080
LoadModule mpm_worker_module libexec/apache2/mod_mpm_worker.so
LoadModule authn_file_module libexec/apache2/mod_authn_file.so
LoadModule authn_core_module libexec/apache2/mod_authn_core.so
LoadModule authz_host_module libexec/apache2/mod_authz_host.so
LoadModule authz_groupfile_module libexec/apache2/mod_authz_groupfile.so
LoadModule authz_user_module libexec/apache2/mod_authz_user.so
LoadModule authz_core_module libexec/apache2/mod_authz_core.so
LoadModule access_compat_module libexec/apache2/mod_access_compat.so
LoadModule auth_basic_module libexec/apache2/mod_auth_basic.so
LoadModule reqtimeout_module libexec/apache2/mod_reqtimeout.so
LoadModule include_module libexec/apache2/mod_include.so
LoadModule filter_module libexec/apache2/mod_filter.so
LoadModule mime_module libexec/apache2/mod_mime.so
LoadModule log_config_module libexec/apache2/mod_log_config.so
LoadModule env_module libexec/apache2/mod_env.so
LoadModule headers_module libexec/apache2/mod_headers.so
LoadModule setenvif_module libexec/apache2/mod_setenvif.so
LoadModule version_module libexec/apache2/mod_version.so
LoadModule slotmem_shm_module libexec/apache2/mod_slotmem_shm.so
LoadModule unixd_module libexec/apache2/mod_unixd.so
LoadModule status_module libexec/apache2/mod_status.so
LoadModule autoindex_module libexec/apache2/mod_autoindex.so




LoadModule negotiation_module libexec/apache2/mod_negotiation.so
LoadModule dir_module libexec/apache2/mod_dir.so
LoadModule userdir_module libexec/apache2/mod_userdir.so
LoadModule alias_module libexec/apache2/mod_alias.so


ServerAdmin you@example.com

AllowOverride none
Require all denied

DocumentRoot "/data/data/com.termux/files/usr/share/apache2/default-site/htdocs"
&lt;Directory "/data/data/com.termux/files/usr/share/apache2/default-site/htdocs"&gt;
Options Indexes FollowSymLinks
AllowOverride None
Require all granted


DirectoryIndex index.html

&lt;Files ".ht*"&gt;
Require all denied

ErrorLog "var/log/apache2/error_log"
LogLevel warn

LogFormat "%h %l %u %t \"%r\" %&gt;s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%h %l %u %t \"%r\" %&gt;s %b" common

LogFormat "%h %l %u %t \"%r\" %&gt;s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio

CustomLog "var/log/apache2/access_log" common


ScriptAlias /cgi-bin/ "/data/data/com.termux/files/usr/lib/cgi-bin/"



&lt;Directory "/data/data/com.termux/files/usr/lib/cgi-bin"&gt;
AllowOverride None
Options None
Require all granted


RequestHeader unset Proxy early


TypesConfig etc/apache2/mime.types
AddType application/x-compress .Z
AddType application/x-gzip .gz .tgz


Include etc/apache2/extra/proxy-html.conf


SSLRandomSeed startup builtin
SSLRandomSeed connect builtin
</pre>
<p>空白行は、ないでしょ。つまり改行だけなんで、上記のように表示されます。空白行を含む表現は、以下なんでタイプ数が多いので面倒なんです。</p>
<pre><span class="s1">'^\s*$'</span></pre>
<p>まぁ、どうでもいい話ですが。w</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
