<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:media="http://search.yahoo.com/mrss/"
	>

<channel>
	<title>Raspberry Pi &#8211; JunkHack Feed</title>
	<link>/</link>
	<description>アリエクでポチった JUNKHACK</description>
	<lastBuildDate>Tue, 20 Nov 2018 19:49:38 +0000</lastBuildDate>
	<language>ja</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2020/09/logo.png</url>
	<title>Raspberry Pi &#8211; JunkHack</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>PaiZero Wのアンテナを見つつ、アレクサとかGoogleアシストを呼び出すものを作る構想なんぞを練ってみる</title>
		<link>/2018/11/21/paizero-w%e3%81%ae%e3%82%a2%e3%83%b3%e3%83%86%e3%83%8a%e3%82%92%e8%a6%8b%e3%81%a4%e3%81%a4%e3%80%81%e3%82%a2%e3%83%ac%e3%82%af%e3%82%b5%e3%81%a8%e3%81%8bgoogle%e3%82%a2%e3%82%b7%e3%82%b9%e3%83%88/</link>
		
		<dc:creator><![CDATA[JunkHack]]></dc:creator>
		<pubDate>Tue, 20 Nov 2018 19:49:38 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Raspberry Pi]]></category>
		<guid isPermaLink="false">/?p=4796</guid>
							<description><![CDATA[Banana Pi に浮気していましたが、RasPi Zero W に戻ってきました。 この子は、2017/02 にリリースされたんですね。だいぶ遅れましたがあれこれ見ていきましょう。まずは、何事も観察から始まります。  [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Banana Pi に浮気していましたが、RasPi Zero W に戻ってきました。<br />
この子は、2017/02 にリリースされたんですね。だいぶ遅れましたがあれこれ見ていきましょう。まずは、何事も観察から始まります。</p>
<p>今日は、RasPai Zero W のアンテナには工夫があるっていうことで各記事を参照してみた後、その部分をみてみました。</p>
<blockquote><p><a href="http://mag.switch-science.com/2017/04/05/rapberry-pi-zero-w-antenna/" target="_blank" rel="noopener noreferrer external" data-wpel-link="external" class="wpel-icon-right">スイッチサイエンスマガジン：Rapberry Pi Zero Wのアンテナのお話<span class="wpel-icon wpel-image wpel-icon-1"></span></a></p></blockquote>
<p><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4797" src="/wp-content/uploads/2018/11/s20181121_001.jpg" alt="S20181121_001.jpg" width="1600" height="1200" /></p>
<p>手前に見えているのは、普通のボールペンの先っちょです。上がアンテナ部分。<br />
基盤の各層の銅箔部分と、コンデンサ３つで2.4GHz 帯の電波をキャッチするようです。</p>
<p>スゥーデンのProant社ってとこがライセンスしたみたいです。こんな工夫があるんですね。</p>
<blockquote>
<div><a href="http://www.proant.se/en/news.htm" target="_blank" rel="noopener noreferrer external" data-wpel-link="external" class="wpel-icon-right">Proant社：News<span class="wpel-icon wpel-image wpel-icon-1"></span></a></div>
</blockquote>
<div>
<p>&nbsp;</p>
</div>
<p>アンテナの設計エンジニアが書いた記事が紹介されていました。</p>
<blockquote><p>Enbedded COMPUTING DESIGN<br />
<a href="http://www.embedded-computing.com/iot/a-lesson-in-wireless-engineering-from-the-raspberry-pi" target="_blank" rel="noopener noreferrer external" data-wpel-link="external" class="wpel-icon-right">A lesson in wireless engineering from the Raspberry Pi<span class="wpel-icon wpel-image wpel-icon-1"></span></a></p></blockquote>
<p>そのほか、いろいろ調査してみます。Zero の基盤と W との比較は以下。</p>
<p><a href="https://twitter.com/pimoroni/status/836510914094510080/photo/1" target="_blank" rel="noopener noreferrer external" data-wpel-link="external"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4798" src="/wp-content/uploads/2018/11/c5vioamwaaa9veh.jpg" alt="C5viOAmWAAA9VEh.jpg" width="1200" height="799" /></a></p>
<p>部品レイアウトもちょっと変更されています。サイズは同じなんでケースなんかは流用できます。</p>
<p><a href="http://raspi.tv/2017/pi-zero-w-wifi-on-the-zero-for-10-and-a-gorgeous-new-case" target="_blank" rel="noopener noreferrer external" data-wpel-link="external"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4799" src="/wp-content/uploads/2018/11/gif-640px-med.gif" alt="GIF-640px-med.gif" width="640" height="355" /></a></p>
<p>面白いですね〜。</p>
<p>最後に、回路の概要図のリンクを。PCB のデータは見つかりませんでした。どっかにはあると思うんですが。この基盤、裏側には部品が実装されてないんですよね。すごいなと。</p>
<p><a title="rpi_SCH_ZeroW_1p1_reduced" href="/wp-content/uploads/2018/11/rpi_sch_zerow_1p1_reduced.pdf" data-wpel-link="internal" rel="noopener noreferrer">rpi_SCH_ZeroW_1p1_reduced</a><a href="https://www.raspberrypi.org/documentation/hardware/raspberrypi/schematics/rpi_SCH_ZeroW_1p1_reduced.pdf" target="_blank" rel="noopener noreferrer external" data-wpel-link="external"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4800" src="/wp-content/uploads/2018/11/schematic1___page2_-_power__xos.png" alt="SCHEMATIC1___PAGE2_-_POWER__XOS.png" width="1269" height="896" /></a></p>
<p>とりあえず、なにかまたPCB基盤を作ってみたくなりました。〇〇HAT基盤とか、なにか、作ってみたいですね。</p>
<p>というか、ちゃんと１つの機能が動作するモノを最近何も作っていなくて、そういう役立つ何かを作ってみたいです。</p>
<p>あれこれ調査していますが、いろいろ作れて迷います。一番興味が引くもので面白く、かつみんなが興味を持つもので、何より自分が作りたいもの。</p>
<p>１つ候補が上がっています。それは、Amazon EchoとGoogle Home の２つの機能を１つにまとめたものがあると楽しいかなと。こういうジャンルってなんていうんですかね？　スマートスピーカー？　うーん、実際には裏側で通信して受け答えをしているわけなんで、音声認識のAIの先っちょって感じでしょうか？Amazon EchoとGoogle Homeは、両方ともなんだかんだと買いそびれてしまい、まだ持っていないんですよね。自作できたら、作りたいなと。どうやら、できそうなんですよね。</p>
<p>まぁそれでも、「ねぇ、アレクサとGoogle 。7時か８時くらいになったらやさしく起こして。」</p>
<p>なんて、お願いできたら、いいなと思っています。さらには、アレクサとGoogle の名前部分を家族の名前にしたら面白いんじゃないかと。猫とかの名前でもいいです。結構笑えるモノができそうな予感。<br />
〇〇→猫１<br />
△△→猫２</p>
<p>「ただいま〜、〇〇。△△、今日のご飯は何にしよう？」とか、話かけたりできたら面白いかもしれません。</p>
<p>&nbsp;</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Raspberry Pi Zero セットアップ2</title>
		<link>/2018/11/19/raspberry-pi-zero-%e3%82%bb%e3%83%83%e3%83%88%e3%82%a2%e3%83%83%e3%83%972/</link>
		
		<dc:creator><![CDATA[JunkHack]]></dc:creator>
		<pubDate>Sun, 18 Nov 2018 15:38:06 +0000</pubDate>
				<category><![CDATA[Aliexpress]]></category>
		<category><![CDATA[Raspberry Pi]]></category>
		<guid isPermaLink="false">/?p=4781</guid>
							<description><![CDATA[今日は、RasPi Zero に接続する MicroUSB の OTG ケーブルが届いたので少し遊んでみた。LED が点灯せず、焦りましたが、SDカードをフォーマットしていて OS が入っていないのを忘れていました。テス [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>今日は、RasPi Zero に接続する MicroUSB の OTG ケーブルが届いたので少し遊んでみた。LED が点灯せず、焦りましたが、SDカードをフォーマットしていて OS が入っていないのを忘れていました。テスター当てて、電源がきているか確認です。<a href="http://bokuraku.com/rasberrypi-nyumon-3/" target="_blank" rel="noopener noreferrer external" data-wpel-link="external" class="wpel-icon-right">ここが参考に<span class="wpel-icon wpel-image wpel-icon-1"></span></a>なりますね。</p>
<p><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4786" src="/wp-content/uploads/2018/11/s20181119_001.jpg" alt="S20181119_001.jpg" width="1600" height="1200" /></p>
<p>普通に扱っていれば、滅多に壊れないのでLED が付かなくてもとりあえずは、SDカードの内容を確認してみるのがいいですね。自分の場合は、SDカードに刺した状態で、USB認識しなかったんで、もしかすると本当にどこかおかしいのかもしれません。</p>
<p><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4782" src="/wp-content/uploads/2018/11/s20181118_001.jpg" alt="S20181118_001.jpg" width="1600" height="1200" /></p>
<p>で、無事ブートしました。３本も接続すると、本体がちっこすぎてケーブルに引っ張られますね。まずは、定番の UnixBenchです。OS は、2018-10-09-raspbian-stretch-lite　です。Update も何もせずとりあえず、UnixBench をコンパイルして実行。</p>
<blockquote><p>========================================================================<br />
BYTE UNIX Benchmarks (Version 5.1.3)</p>
<p>System: pizero: GNU/Linux<br />
OS: GNU/Linux &#8212; 4.14.71+ &#8212; #1145 Fri Sep 21 15:06:38 BST 2018<br />
Machine: armv6l (unknown)<br />
Language: en_US.utf8 (charmap=&#8221;ANSI_X3.4-1968&#8243;, collate=&#8221;ANSI_X3.4-1968&#8243;)<br />
CPU 0: ARMv6-compatible processor rev 7 (v6l) (0.0 bogomips)</p>
<p>21:00:01 up 22 min, 2 users, load average: 0.08, 0.25, 0.21; runlevel 3</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;<br />
Benchmark Run: Sun Nov 18 2018 21:00:01 &#8211; 21:28:09<br />
1 CPU in system; running 1 parallel copy of tests</p>
<p>Dhrystone 2 using register variables 2152307.8 lps (10.0 s, 7 samples)<br />
Double-Precision Whetstone 461.6 MWIPS (10.0 s, 7 samples)<br />
Execl Throughput 222.2 lps (29.8 s, 2 samples)<br />
File Copy 1024 bufsize 2000 maxblocks 37774.2 KBps (30.0 s, 2 samples)<br />
File Copy 256 bufsize 500 maxblocks 12292.0 KBps (30.0 s, 2 samples)<br />
File Copy 4096 bufsize 8000 maxblocks 94535.6 KBps (30.0 s, 2 samples)<br />
Pipe Throughput 129589.5 lps (10.0 s, 7 samples)<br />
Pipe-based Context Switching 20014.2 lps (10.0 s, 7 samples)<br />
Process Creation 564.7 lps (30.0 s, 2 samples)<br />
Shell Scripts (1 concurrent) 465.9 lpm (60.1 s, 2 samples)<br />
Shell Scripts (8 concurrent) 59.6 lpm (60.4 s, 2 samples)<br />
System Call Overhead 441679.0 lps (10.0 s, 7 samples)</p>
<p>System Benchmarks Index Values BASELINE RESULT INDEX<br />
Dhrystone 2 using register variables 116700.0 2152307.8 184.4<br />
Double-Precision Whetstone 55.0 461.6 83.9<br />
Execl Throughput 43.0 222.2 51.7<br />
File Copy 1024 bufsize 2000 maxblocks 3960.0 37774.2 95.4<br />
File Copy 256 bufsize 500 maxblocks 1655.0 12292.0 74.3<br />
File Copy 4096 bufsize 8000 maxblocks 5800.0 94535.6 163.0<br />
Pipe Throughput 12440.0 129589.5 104.2<br />
Pipe-based Context Switching 4000.0 20014.2 50.0<br />
Process Creation 126.0 564.7 44.8<br />
Shell Scripts (1 concurrent) 42.4 465.9 109.9<br />
Shell Scripts (8 concurrent) 6.0 59.6 99.4<br />
System Call Overhead 15000.0 441679.0 294.5<br />
========<br />
System Benchmarks Index Score <span style="color:#ff0000;">97</span>.0</p></blockquote>
<p>100くらいだとは知っていましたが、おそっ（笑）まぁ、シングルコアなんで仕方ありませんね。使い道に困るデバイスかもしれません。というか、今までのこれ系のボードも結局転がっていますしね。ベンチマーク取って、あぁ、安いね、小さいね。で終わっています（笑）</p>
<p>でも本体が小さいので、Linux の何かを使ったものを作るにはいいかもしれません。例えば、カメラとか？ 家の IoT デバイスを集中的に処理するものとか。あと、アリエク物色していて、<a href="https://www.aliexpress.com/store/product/Allwinner-H2-Open-source-hardware-platform-BPI-M2-zero-all-ineter-face-same-as-Raspberry-pi/302756_32839074880.html" target="_blank" rel="noopener noreferrer external" data-wpel-link="external" class="wpel-icon-right">Banana Pi M2 Zero<span class="wpel-icon wpel-image wpel-icon-1"></span></a> っていう互換？ボードも見つけました。2400円（送料込）</p>
<p><a href="http://www.banana-pi.org/bpi-zero.html" target="_blank" rel="noopener noreferrer external" class="broken_link" data-wpel-link="external"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4783" src="/wp-content/uploads/2018/11/zero2.png" alt="zero2.png" width="741" height="340" /></a></p>
<p>特色は、CPU コア数が４つで、メモリがDDR3 なんで処理速が早い（とは行っても、たかが知れてるかもですが）いや、この大きさで4core なのはいいんじゃないでしょうか？</p>
<table style="font-size:14px;background-color:#f8f9fa;color:#222222;margin:1em 0;border:1px solid #a2a9b1;border-collapse:collapse;font-family:sans-serif;height:982px;" width="680">
<tbody>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;background:paleturquoise;color:black;" colspan="4"><b>HardWare Specification of Banana pi BPI-M2 zero VS Raspberry Pi Zero W</b></td>
</tr>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Module</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;"><b>Banana Pi BPI-M2 Zero</b></td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;"><b>Raspberry Pi Zero W</b></td>
</tr>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">CPU</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">H2+ <span style="color:#ff0000;">Quad-core</span> Cortex-A7 H265/HEVC 1080P</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Broadcom BCM2835 32 Bit 1 GHz ARM1176JZF-S single-core</td>
</tr>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">GPU</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Mali400MP2 GPU @600MHz,Supports OpenGL ES 2.0</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">VideoCore IV</td>
</tr>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Memory \(SDRAM\)</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">512M <span style="color:#ff0000;">DDR3</span>(shared with GPU)</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">512 MB DDR2</td>
</tr>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Onboard Storage</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">TF card \(Max. 64GB\)</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">TF card \(Max. 64GB\)</td>
</tr>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Onboard Network</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">NOPE</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">NOPE</td>
</tr>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Onboard WIFI</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">SDIO AP6212（option AP6181、AP6335）<span style="color:#ff0000;">Bluetooth 4.0</span> (AP6212)</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">802.11n wireless, Bluetooth 4.1</td>
</tr>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Video decoding</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;"><span style="color:#ff0000;">1080p@60fps</span>,H.264 Video encoding 1080p@30fps,H.264</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">1080p30 H.264/MPEG-4 AVC high-profile decoder and encoder</td>
</tr>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Video input</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">A CSI input connector Camera</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">CSI camera connector</td>
</tr>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Video Outputs</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">mini HDMI 1.4,1080P@30fps, DHCP</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Mini HDMI and USB On-The-Go ports</td>
</tr>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Audio Output</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Mini HDMI</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Mini HDMI</td>
</tr>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Power Source</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Micro USB with 5V/2A</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">5V/2A</td>
</tr>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">USB 2.0 Ports</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">one USB 2.0 OTG</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">one USB 2.0 OTG</td>
</tr>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Buttons</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;"><span style="color:#ff0000;">Power Button, Reset Button</span></td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Composite video and reset headers</td>
</tr>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Low-level peripherals</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">40 Pins Header,compatible with Raspberry Pi 3</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">40 PIN</td>
</tr>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">uart GPIO\(1&#215;3\) pin</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">UART, ground</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">UART</td>
</tr>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">LED</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Power led &amp; <span style="color:#ff0000;">Status led</span></td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Power Status LED</td>
</tr>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">IR</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">N/A</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">N/A</td>
</tr>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Supported OS</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Android, Ubuntu, Debian, Rasberry Pi Image</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Linux</td>
</tr>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Product size</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">65mm × 30mm</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">65mm x 30mm</td>
</tr>
<tr>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">Weight</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;"><span style="color:#ff0000;">15</span>g</td>
<td style="border:1px solid #a2a9b1;padding:.2em .4em;">9G</td>
</tr>
</tbody>
</table>
<p>比較は、<a href="http://Banana/ Pi Zero vs. Raspberry Pi Zero W (Wireless) vs. LicheePi Zero vs. Orange Pi Zero Plus 2 (H5)" target="_blank" rel="noopener noreferrer external" class="broken_link wpel-icon-right" data-wpel-link="external">ここが<span class="wpel-icon wpel-image wpel-icon-1"></span></a>わかりやすいですも。一部、Bluetooth がないなど情報の間違えはありますが。到着するまで、ここの<a href="http://wiki.banana-pi.org/Getting_Started_with_M2_Zero" target="_blank" rel="noopener noreferrer external" data-wpel-link="external" class="wpel-icon-right">Wiki<span class="wpel-icon wpel-image wpel-icon-1"></span></a>でも読んでますか。</p>
<p>こういう小さくて、手頃なやつを見つけるとつい買っちゃうんですよね。WiFi のAP6212も技適は AMPAK社 が通しているようで問題ないと思うんで、ポチってみました。</p>
<p><a title="AP6212_V1.1_09022014" href="/wp-content/uploads/2018/11/ap6212_v1-1_09022014.pdf" data-wpel-link="internal" rel="noopener noreferrer">AP6212_V1.1_09022014</a></p>
<p><a href="http://www.tele.soumu.go.jp/giteki/SearchServlet?pageID=jg01_01&amp;PC=020&amp;TC=N&amp;PK=1&amp;FN=180921N020&amp;SN=%94F%8F%D8&amp;LN=1&amp;R1=*****&amp;R2=*****" target="_blank" rel="noopener noreferrer external" data-wpel-link="external"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4788" src="/wp-content/uploads/2018/11/giteki_ap6212.png" alt="giteki_AP6212.png" width="703" height="779" /></a></p>
<p>また、これでゴミが１つ増えたかも。（笑）いや、これは壮大なる、汎用品で作る UMPC プロジェクトの始まりになるのかもしれません。たぶん、海外のかたでやっているかたがいるはず。</p>
<p>モバイルで使いたいのは、快適なテキスト入力と、常時data通信で、ssh 端末として使いたいんですよね。こんな限定的に使う人は、たぶんLinux エンジニアか、テキスト入力で原稿作りたい記者か、作家くらいのもんで、需要は一定数あると思うんですが、日本のメーカーはこの分野はもうからないと撤退したようです。</p>
<p>ないなら、作れです。いつどこでも、メンテナンスできて、ブログのネタも快適にテキスト入力できる端末っていうのがあると嬉しいんです。多少大きくてもキーボードはフルピッチのキーがほしい。横幅26cm あってもいいんでそういう端末がほしいんですよね。昔、Libretto って端末があったんですが結局買えず仕舞いでした。</p>
<p>じゃ、普通のうっすいノートPCでいいじゃんとはならないんです。キーボードが打ちにくいんですよね。できればメカニカルなやつで、ファンクションキーがないタイプ。</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Raspberry Pi Zero セットアップ１</title>
		<link>/2018/11/16/raspberry-pi-zero-%e3%82%bb%e3%83%83%e3%83%88%e3%82%a2%e3%83%83%e3%83%97%ef%bc%91/</link>
		
		<dc:creator><![CDATA[JunkHack]]></dc:creator>
		<pubDate>Thu, 15 Nov 2018 20:40:51 +0000</pubDate>
				<category><![CDATA[Raspberry Pi]]></category>
		<guid isPermaLink="false">/?p=4759</guid>
							<description><![CDATA[ちょこっと時間が出来たので、Raspberry Pi Zeroをセットアップ。 セットアップは大きく２つ方法があります。 （１）USBを母艦に繋げてSDカードに展開しセットアップする方法 ＞WiFi設定など入れれるのでモ [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>ちょこっと時間が出来たので、Raspberry Pi Zeroをセットアップ。<br />
セットアップは大きく２つ方法があります。</p>
<p>（１）USBを母艦に繋げてSDカードに展開しセットアップする方法<br />
＞WiFi設定など入れれるのでモニタなしでも可能<br />
（２）SDカードにimg を展開。hdmi モニタやキーボード使って、boot する<br />
＞モニタやキーボードなど繋げる必要あり</p>
<p>とりあえず、HDMI出力もされるか確認したかったので（２）の方法でやることに。<br />
SDカードに書き込むのは、コマンドライン、ツールを使う方法がありますが、マカーなのでGUIツールのEtcherを使って書き込み。</p>
<blockquote>
<p class="p1"><span class="s1">.<br />
</span><span class="s1">├── <span style="color:#ff0000;"><strong>2018-10-09-raspbian-stretch-lite</strong></span>.zip<br />
</span><span class="s1">└── 2018-10-09-raspbian-stretch.zip</span></p>
</blockquote>
<p>GUIがない、lite ってやつから遊んでみることにします。<br />
<img loading="lazy" decoding="async" class="alignnone size-full wp-image-4762" src="/wp-content/uploads/2018/11/etcher_e28093_7__flashing.png" alt="Etcher_–_7__Flashing.png" width="800" height="380" /></p>
<p>ツールを使うとdisk を間違えなくていいですね。書き込むと、fatの boot領域とlinux の領域が最低限で作られます。</p>
<blockquote><p>$ diskutil list | grep -A5 external<br />
/dev/disk2 (external, physical):<br />
#: TYPE NAME SIZE IDENTIFIER<br />
0: FDisk_partition_scheme *16.0 GB disk2<br />
1: Windows_FAT_32 boot 45.9 MB disk2s1<br />
2: Linux 1.8 GB disk2s2</p></blockquote>
<p>電源のUSB は外側です。内側のUSBは母艦に繋げてUSB 接続し、SDカードをマウントできるようです。次回試して見ましょう。</p>
<p><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4760" src="/wp-content/uploads/2018/11/s20181116_001.jpg" alt="S20181116_001.jpg" width="1600" height="1200" /></p>
<p>ここで、キーボードがMicroUSB なんで繋げない事に気がついた・・・・OTGケーブルを調達することに。</p>
<p><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4761" src="/wp-content/uploads/2018/11/amazonusb.png" alt="amazonusb.png" width="908" height="383" /></p>
<p>microUSB を分解して繋げればいいんですが、ま１つくらいあってもいいかと変換ケーブルを発注。時間もなくなってきたようなんで、また土日にセットアップすることに。</p>
<p>とりあえず、HDMI出力し無事bootしたのを確認したところまで。</p>
<p>一応、Fedora も入れてみたかったのでimg を用意しておきました。</p>
<blockquote><p>.<br />
├── Fedora-LXDE-armhfp-29-1.2-sda.raw.xz<br />
├── Fedora-Server-armhfp-29-1.2-sda.raw.xz<br />
├── Fedora-Workstation-armhfp-29-1.2-sda.raw.xz<br />
└── Fedora-Xfce-armhfp-29-1.2-sda.raw.xz</p></blockquote>
<p>kernel モジュールなど、どのくらいFedoraで動くかなど、あれこれ、検討してみたいと思います。</p>
<p>&nbsp;</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>VNC 設定と osx10.11 の画面共有</title>
		<link>/2016/06/12/vnc-%e8%a8%ad%e5%ae%9a%e3%81%a8-osx10-11-%e3%81%ae%e7%94%bb%e9%9d%a2%e5%85%b1%e6%9c%89/</link>
		
		<dc:creator><![CDATA[JunkHack]]></dc:creator>
		<pubDate>Sun, 12 Jun 2016 00:00:47 +0000</pubDate>
				<category><![CDATA[OrangePi]]></category>
		<category><![CDATA[OrangePiLite]]></category>
		<category><![CDATA[OrangePiOne]]></category>
		<category><![CDATA[OrangePiPC]]></category>
		<category><![CDATA[osx]]></category>
		<category><![CDATA[Raspberry Pi]]></category>
		<guid isPermaLink="false">/?p=2251</guid>
							<description><![CDATA[いつも VNC の設定の仕方を忘れるので備忘録。 参考 Raspberry Piの設定【VNCサーバ（tightVNC）の設定】 ARMBIAN のデスクトップ版は、nodm で自動ログインするので、まずこれを中止。 - [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>いつも VNC の設定の仕方を忘れるので備忘録。</p>
<blockquote>
<p>参考</p>
<p><a href="http://yamaryu0508.hatenablog.com/entry/2014/08/16/202441" target="_blank" rel="noopener noreferrer external" data-wpel-link="external" class="wpel-icon-right">Raspberry Piの設定【VNCサーバ（tightVNC）の設定】<span class="wpel-icon wpel-image wpel-icon-1"></span></a></p>
</blockquote>
<p>ARMBIAN のデスクトップ版は、nodm で自動ログインするので、まずこれを中止。</p>
<pre class="brush: cpp; gutter: false; toolbar: false; collapse: true; auto-links: false; smart-tabs: false;">---- /etc/default/nodm
::
#NODM_ENABLED=true
NODM_ENABLED=false</pre>
<p>続いて、vnc のインストール</p>
<pre class="brush: cpp; gutter: false; toolbar: false; collapse: true; auto-links: false; smart-tabs: false;"># apt-get install tightvncserver</pre>
<p>設定</p>
<pre class="brush: cpp; gutter: false; toolbar: false; collapse: true; auto-links: false; smart-tabs: false;">---- /etc/init.d/vncboot
### BEGIN INIT INFO
# Provides: vncboot
# Required-Start: $remote_fs $syslog
# Required-Stop: $remote_fs $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start VNC Server at boot time
# Description: Start VNC Server at boot time.
### END INIT INFO

#! /bin/sh
# /etc/init.d/vncboot

USER=junkhack
HOME=/home/junkhack

export USER HOME

case &quot;$1&quot; in
 start)
 echo &quot;Starting VNC Server&quot;
 #Insert your favoured settings for a VNC session
 su $USER -c '/usr/bin/vncserver :1 -geometry 1440x900 -depth 24'
 ;;

 stop)
 echo &quot;Stopping VNC Server&quot;
 su $USER -c '/usr/bin/vncserver -kill :1'
 ;;

 *)
 echo &quot;Usage: /etc/init.d/vncboot {start|stop}&quot;
 exit 1
 ;;
esac

exit 0</pre>
<p>権限付与と、自動起動設定</p>
<pre class="brush: cpp; gutter: false; toolbar: false; collapse: true; auto-links: false; smart-tabs: false;"># chmod 755 /etc/init.d/vncboot
# update-rc.d vncboot defaults</pre>
<p>&#160;</p>
<p>リブートするか、起動スクリプトをたたく。</p>
<pre class="brush: cpp; gutter: false; toolbar: false; collapse: true; auto-links: false; smart-tabs: false;"># /etc/init.d/vncboot start</pre>
<p>osx からの画面共有</p>
<p><img loading="lazy" decoding="async" title="osxvnc" style="border-top:0;border-right:0;border-bottom:0;float:none;margin-left:auto;border-left:0;display:block;margin-right:auto;" border="0" alt="osxvnc" src="/wp-content/uploads/2016/06/osxvnc.png" width="500" height="289" /> </p>
<p>&#160;</p>
<p><img loading="lazy" decoding="async" title="junkhack_s_X_desktop__orangepilite_1_" style="border-top:0;border-right:0;border-bottom:0;float:none;margin-left:auto;border-left:0;display:block;margin-right:auto;" border="0" alt="junkhack_s_X_desktop__orangepilite_1_" src="/wp-content/uploads/2016/06/junkhack_s_x_desktop__orangepilite_1_.png" width="829" height="785" /> </p>
<p>osx10.11 の画面共有は少し良くなった感じ。</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>SDCard16GB 来たのでRasbian Jessie 入れてみた</title>
		<link>/2016/02/01/sdcard16gb-%e6%9d%a5%e3%81%9f%e3%81%ae%e3%81%a7rasbian-jessie-%e5%85%a5%e3%82%8c%e3%81%a6%e3%81%bf%e3%81%9f/</link>
		
		<dc:creator><![CDATA[JunkHack]]></dc:creator>
		<pubDate>Mon, 01 Feb 2016 14:53:25 +0000</pubDate>
				<category><![CDATA[Parts]]></category>
		<category><![CDATA[Raspberry Pi]]></category>
		<guid isPermaLink="false">/?p=2090</guid>
							<description><![CDATA[SDCard の16GB のテスト代わりに、RasPi に Raspbian Jessie を入れてベンチマークしてみました。 &#160; 環境はこんな感じ。 # uname -a Linux raspberrypi  [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>SDCard の16GB のテスト代わりに、RasPi に Raspbian Jessie を入れてベンチマークしてみました。</p>
<p>&#160;</p>
<p>環境はこんな感じ。</p>
<pre class="brush: cpp; gutter: false; toolbar: false; collapse: true; auto-links: false; smart-tabs: false;"># uname -a
Linux raspberrypi 4.1.13-v7+ #826 SMP PREEMPT Fri Nov 13 20:19:03 GMT 2015 armv7l GNU/Linux</pre>
<p>で、ベンチマーク</p>
<pre class="brush: cpp; gutter: false; toolbar: false; collapse: true; auto-links: false; smart-tabs: false;">========================================================================
   BYTE UNIX Benchmarks (Version 5.1.3)

   System: raspberrypi: GNU/Linux
   OS: GNU/Linux -- 4.1.13-v7+ -- #826 SMP PREEMPT Fri Nov 13 20:19:03 GMT 2015
   Machine: armv7l (unknown)
   Language: en_US.utf8 (charmap=&quot;ANSI_X3.4-1968&quot;, collate=&quot;ANSI_X3.4-1968&quot;)
   CPU 0: ARMv7 Processor rev 5 (v7l) (0.0 bogomips)
          
   CPU 1: ARMv7 Processor rev 5 (v7l) (0.0 bogomips)
          
   CPU 2: ARMv7 Processor rev 5 (v7l) (0.0 bogomips)
          
   CPU 3: ARMv7 Processor rev 5 (v7l) (0.0 bogomips)
          
   23:14:27 up 11 min,  3 users,  load average: 0.23, 0.16, 0.10; runlevel 5

------------------------------------------------------------------------
Benchmark Run: 月  2月 01 2016 23:14:27 - 23:42:32
4 CPUs in system; running 4 parallel copies of tests

Dhrystone 2 using register variables       13364099.5 lps   (10.0 s, 7 samples)
Double-Precision Whetstone                     1935.3 MWIPS (9.9 s, 7 samples)
Execl Throughput                               1438.9 lps   (29.9 s, 2 samples)
File Copy 1024 bufsize 2000 maxblocks        136337.7 KBps  (30.0 s, 2 samples)
File Copy 256 bufsize 500 maxblocks           38047.7 KBps  (30.0 s, 2 samples)
File Copy 4096 bufsize 8000 maxblocks        359110.7 KBps  (30.0 s, 2 samples)
Pipe Throughput                              788483.7 lps   (10.0 s, 7 samples)
Pipe-based Context Switching                 141326.6 lps   (10.0 s, 7 samples)
Process Creation                               3012.6 lps   (30.0 s, 2 samples)
Shell Scripts (1 concurrent)                   3025.1 lpm   (60.1 s, 2 samples)
Shell Scripts (8 concurrent)                    406.0 lpm   (60.2 s, 2 samples)
System Call Overhead                        1760060.4 lps   (10.0 s, 7 samples)

System Benchmarks Index Values               BASELINE       RESULT    INDEX
Dhrystone 2 using register variables         116700.0   13364099.5   1145.2
Double-Precision Whetstone                       55.0       1935.3    351.9
Execl Throughput                                 43.0       1438.9    334.6
File Copy 1024 bufsize 2000 maxblocks          3960.0     136337.7    344.3
File Copy 256 bufsize 500 maxblocks            1655.0      38047.7    229.9
File Copy 4096 bufsize 8000 maxblocks          5800.0     359110.7    619.2
Pipe Throughput                               12440.0     788483.7    633.8
Pipe-based Context Switching                   4000.0     141326.6    353.3
Process Creation                                126.0       3012.6    239.1
Shell Scripts (1 concurrent)                     42.4       3025.1    713.5
Shell Scripts (8 concurrent)                      6.0        406.0    676.6
System Call Overhead                          15000.0    1760060.4   1173.4
                                                                   ========
System Benchmarks Index Score                                         491.8</pre>
<p>あら、なんか速いんじゃないでしょうか？</p>
<p>以前計測したときは、400ちょい超えたくらいだったはずです。</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
